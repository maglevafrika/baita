{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/reports/page.tsx"],"sourcesContent":["\n\n\"use client\";\n\nimport { useMemo } from 'react';\nimport { Bar, BarChart, Pie, PieChart, Cell, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useDatabase } from '@/context/database-context';\nimport { useApplicants } from '@/context/applicants-context';\nimport type { Installment } from '@/lib/types';\nimport { format, parseISO, startOfDay, differenceInYears } from 'date-fns';\nimport { LineChart as LineChartIcon, Users, DollarSign, UserCheck, Loader2, UserRound, Cake, BarChartHorizontal, TrendingUp } from 'lucide-react';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent } from \"@/components/ui/chart\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\n\nconst chartConfig = {\n  students: { label: \"Students\", color: \"hsl(var(--primary))\" },\n  paid: { label: \"Paid\", color: \"hsl(var(--chart-1))\" },\n  unpaid: { label: \"Unpaid\", color: \"hsl(var(--chart-2))\" },\n  overdue: { label: \"Overdue\", color: \"hsl(var(--destructive))\" },\n  applicants: { label: \"Applicants\", color: \"hsl(var(--secondary))\" },\n  male: { label: \"Male\", color: \"hsl(var(--chart-1))\" },\n  female: { label: \"Female\", color: \"hsl(var(--chart-2))\" },\n  age: { label: \"Students\", color: \"hsl(var(--primary))\" },\n  saturday: { label: 'Saturday', color: '#8884d8' },\n  sunday: { label: 'Sunday', color: '#82ca9d' },\n  monday: { label: 'Monday', color: '#ffc658' },\n  tuesday: { label: 'Tuesday', color: '#ff8042' },\n  wednesday: { label: 'Wednesday', color: '#0088FE' },\n  thursday: { label: 'Thursday', color: '#00C49F' },\n  friday: { label: 'Friday', color: '#FFBB28' },\n  expected: { label: 'Expected', color: 'hsl(var(--chart-1))' },\n  collected: { label: 'Collected', color: 'hsl(var(--chart-3))' },\n};\n\n// Main Page Component\nexport default function ReportsPage() {\n    const { students, semesters, loading: dbLoading } = useDatabase();\n    const { applicants, loading: appLoading } = useApplicants();\n\n    // 1. Enrollment Data\n    const enrollmentData = useMemo(() => {\n        const countsByMonth: { [key: string]: number } = {};\n        students.forEach(student => {\n            if (student.enrollmentDate) {\n                try {\n                    const month = format(parseISO(student.enrollmentDate), 'MMM yyyy');\n                    countsByMonth[month] = (countsByMonth[month] || 0) + 1;\n                } catch(e) {\n                    console.error(\"Invalid date format for student:\", student.id, student.enrollmentDate);\n                }\n            }\n        });\n        \n        const sortedMonths = Object.keys(countsByMonth).sort((a,b) => {\n            const [monA, yearA] = a.split(' ');\n            const [monB, yearB] = b.split(' ');\n            const dateA = new Date(`${monA} 1 ${yearA}`);\n            const dateB = new Date(`${monB} 1 ${yearB}`);\n            return dateA.getTime() - dateB.getTime();\n        });\n\n        return sortedMonths.map(month => ({\n            name: month,\n            students: countsByMonth[month]\n        }));\n    }, [students]);\n    \n    // 2. Financial Data\n    const financialData = useMemo(() => {\n        const stats = { paid: 0, unpaid: 0, overdue: 0, total: 0 };\n        const today = startOfDay(new Date());\n\n        students.forEach(student => {\n            if(student.installments) {\n                student.installments.forEach((inst: Installment) => {\n                    stats.total += inst.amount;\n                    if(inst.status === 'paid') {\n                        stats.paid += inst.amount;\n                    } else {\n                        const dueDate = startOfDay(parseISO(inst.dueDate));\n                        if(dueDate < today) {\n                            stats.overdue += inst.amount;\n                        } else {\n                            stats.unpaid += inst.amount;\n                        }\n                    }\n                })\n            }\n        });\n        \n        return [\n            { name: 'Paid', value: stats.paid, fill: 'var(--color-paid)' },\n            { name: 'Unpaid', value: stats.unpaid, fill: 'var(--color-unpaid)' },\n            { name: 'Overdue', value: stats.overdue, fill: 'var(--color-overdue)' },\n        ];\n    }, [students]);\n\n    // 3. Applicant Data\n    const applicantData = useMemo(() => {\n        const counts = applicants.reduce((acc, applicant) => {\n            acc[applicant.status] = (acc[applicant.status] || 0) + 1;\n            return acc;\n        }, {} as Record<string, number>);\n\n        return Object.entries(counts).map(([name, value]) => ({ name: name.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()), count: value }));\n    }, [applicants]);\n\n    // 4. Gender Data\n    const genderData = useMemo(() => {\n        const counts = students.reduce((acc, student) => {\n            const gender = student.gender || 'unknown';\n            acc[gender] = (acc[gender] || 0) + 1;\n            return acc;\n        }, {} as Record<string, number>);\n\n        return [\n            { name: 'Male', value: counts.male || 0, fill: 'var(--color-male)' },\n            { name: 'Female', value: counts.female || 0, fill: 'var(--color-female)' },\n        ];\n    }, [students]);\n\n    // 5. Age Group Data\n    const ageGroupData = useMemo(() => {\n        const ageGroups: { [key: string]: number } = {\n            'Under 18': 0,\n            '18-24': 0,\n            '25-34': 0,\n            '35-44': 0,\n            '45+': 0,\n        };\n\n        const today = new Date();\n        students.forEach(student => {\n            if (student.dob) {\n                const age = differenceInYears(today, parseISO(student.dob));\n                if (age < 18) ageGroups['Under 18']++;\n                else if (age <= 24) ageGroups['18-24']++;\n                else if (age <= 34) ageGroups['25-34']++;\n                else if (age <= 44) ageGroups['35-44']++;\n                else ageGroups['45+']++;\n            }\n        });\n\n        return Object.entries(ageGroups).map(([name, count]) => ({ name, students: count }));\n    }, [students]);\n\n    // 6. Teacher Workload Data\n    const teacherWorkloadData = useMemo(() => {\n        if (!semesters.length) return [];\n        const activeSemester = semesters[0];\n        const { masterSchedule } = activeSemester;\n\n        return Object.entries(masterSchedule).map(([teacherName, schedule]) => {\n            const workload: { [day: string]: number } = {\n                saturday: 0, sunday: 0, monday: 0, tuesday: 0, wednesday: 0, thursday: 0\n            };\n            Object.entries(schedule).forEach(([day, sessions]) => {\n                const totalHours = sessions.reduce((acc, session) => acc + session.duration, 0);\n                const dayKey = day.toLowerCase();\n                if(dayKey in workload) {\n                    workload[dayKey] = totalHours;\n                }\n            });\n            return { name: teacherName, ...workload };\n        });\n    }, [semesters]);\n\n    // 7. Expected Revenue\n    const expectedRevenueData = useMemo(() => {\n        const stats = {\n            expected: 0,\n            collected: 0,\n        };\n\n        students.forEach(student => {\n            if(student.installments) {\n                student.installments.forEach((inst: Installment) => {\n                    stats.expected += inst.amount;\n                    if(inst.status === 'paid') {\n                        stats.collected += inst.amount;\n                    }\n                });\n            }\n        });\n        \n        return [\n            { name: 'Revenue', expected: stats.expected, collected: stats.collected }\n        ];\n    }, [students]);\n\n\n    const loading = dbLoading || appLoading;\n\n    if (loading) {\n        return <div className=\"flex h-[80vh] items-center justify-center\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\" /></div>;\n    }\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-4\">\n                <LineChartIcon className=\"w-8 h-8 text-primary\" />\n                <h1 className=\"text-3xl font-bold font-headline\">Reports & Analytics</h1>\n            </div>\n\n            <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n                 <Card className=\"lg:col-span-2\">\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><Users /> Student Enrollment Trends</CardTitle>\n                        <CardDescription>New student enrollments per month.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ChartContainer config={chartConfig} className=\"h-64 w-full\">\n                            <BarChart data={enrollmentData} margin={{ top: 20, right: 20, left: -10, bottom: 0 }}>\n                                <CartesianGrid vertical={false} />\n                                <XAxis dataKey=\"name\" tickLine={false} axisLine={false} tickMargin={8} />\n                                <YAxis />\n                                <ChartTooltip content={<ChartTooltipContent />} />\n                                <Bar dataKey=\"students\" fill=\"var(--color-students)\" radius={4} />\n                            </BarChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><DollarSign /> Financial Overview</CardTitle>\n                         <CardDescription>Breakdown of all installment payments.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                         <ChartContainer config={chartConfig} className=\"h-64 w-full\">\n                            <PieChart>\n                                <ChartTooltip content={<ChartTooltipContent nameKey=\"value\" />} />\n                                <Pie data={financialData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={80}>\n                                    {financialData.map((entry) => (\n                                        <Cell key={`cell-${entry.name}`} fill={entry.fill} />\n                                    ))}\n                                </Pie>\n                                <ChartLegend content={<ChartLegendContent />} />\n                            </PieChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n                 <Card className=\"lg:col-span-3\">\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><UserCheck /> Applicant Funnel</CardTitle>\n                        <CardDescription>Current status of all applications.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                         <ChartContainer config={chartConfig} className=\"h-64 w-full\">\n                            <BarChart data={applicantData} layout=\"vertical\" margin={{ top: 20, right: 20, left: 40, bottom: 0 }}>\n                                <CartesianGrid horizontal={false} />\n                                <XAxis type=\"number\" />\n                                <YAxis dataKey=\"name\" type=\"category\" tickLine={false} axisLine={false} tickMargin={8} width={120} />\n                                <ChartTooltip content={<ChartTooltipContent />} />\n                                <Bar dataKey=\"count\" fill=\"var(--color-applicants)\" radius={4} />\n                            </BarChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><UserRound /> Gender Distribution</CardTitle>\n                         <CardDescription>Breakdown of student gender.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                         <ChartContainer config={chartConfig} className=\"h-64 w-full\">\n                            <PieChart>\n                                <ChartTooltip content={<ChartTooltipContent nameKey=\"value\" />} />\n                                <Pie data={genderData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={80}>\n                                    {genderData.map((entry) => (\n                                        <Cell key={`cell-gender-${entry.name}`} fill={entry.fill} />\n                                    ))}\n                                </Pie>\n                                <ChartLegend content={<ChartLegendContent />} />\n                            </PieChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n                 <Card className=\"lg:col-span-2\">\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><Cake /> Age Groups</CardTitle>\n                        <CardDescription>Distribution of students by age group.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ChartContainer config={chartConfig} className=\"h-64 w-full\">\n                            <BarChart data={ageGroupData} margin={{ top: 20, right: 20, left: -10, bottom: 0 }}>\n                                <CartesianGrid vertical={false} />\n                                <XAxis dataKey=\"name\" tickLine={false} axisLine={false} tickMargin={8} />\n                                <YAxis />\n                                <ChartTooltip content={<ChartTooltipContent />} />\n                                <Bar dataKey=\"students\" fill=\"var(--color-age)\" radius={4} />\n                            </BarChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n                 <Card className=\"lg:col-span-3\">\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><TrendingUp /> Expected Revenue</CardTitle>\n                        <CardDescription>Comparison of expected revenue from subscriptions versus collected payments.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ChartContainer config={chartConfig} className=\"h-64 w-full\">\n                           <BarChart data={expectedRevenueData} margin={{ top: 20, right: 20, bottom: 10, left: 20 }}>\n                                <CartesianGrid vertical={false} />\n                                <XAxis dataKey=\"name\" tickLine={false} axisLine={false} />\n                                <YAxis tickFormatter={(value) => `SAR ${value/1000}k`} />\n                                <ChartTooltip content={<ChartTooltipContent formatter={(value, name) => `SAR ${value.toLocaleString()}`} />} />\n                                <ChartLegend content={<ChartLegendContent />} />\n                                <Bar dataKey=\"expected\" fill=\"var(--color-expected)\" radius={4} />\n                                <Bar dataKey=\"collected\" fill=\"var(--color-collected)\" radius={4} />\n                            </BarChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n                <Card className=\"lg:col-span-3\">\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><BarChartHorizontal /> Teacher Workload</CardTitle>\n                        <CardDescription>Weekly scheduled hours per teacher, broken down by day.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ChartContainer config={chartConfig} className=\"h-[400px] w-full\">\n                            <BarChart data={teacherWorkloadData} layout=\"vertical\" margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n                                <CartesianGrid horizontal={false} />\n                                <XAxis type=\"number\" />\n                                <YAxis type=\"category\" dataKey=\"name\" width={80} tickLine={false} axisLine={false} />\n                                <Tooltip content={<ChartTooltipContent />} />\n                                <Legend />\n                                <Bar dataKey=\"saturday\" stackId=\"a\" fill=\"var(--color-saturday)\" name=\"Saturday\" />\n                                <Bar dataKey=\"sunday\" stackId=\"a\" fill=\"var(--color-sunday)\" name=\"Sunday\" />\n                                <Bar dataKey=\"monday\" stackId=\"a\" fill=\"var(--color-monday)\" name=\"Monday\" />\n                                <Bar dataKey=\"tuesday\" stackId=\"a\" fill=\"var(--color-tuesday)\" name=\"Tuesday\" />\n                                <Bar dataKey=\"wednesday\" stackId=\"a\" fill=\"var(--color-wednesday)\" name=\"Wednesday\" />\n                                <Bar dataKey=\"thursday\" stackId=\"a\" fill=\"var(--color-thursday)\" name=\"Thursday\" />\n                            </BarChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}